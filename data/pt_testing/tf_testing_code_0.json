[
   {
      "page_content": "",
      "metadata": {
         "section_header": "Global Variables",
         "type": "python global"
      }
   },
   {
      "page_content": "import tensorflow as tf\nclass MyModel(tf.keras.Model):\n\t\tdef __init__(self):\n\t\t\tsuper().__init__()\n\t\t\tself.conv1 = tf.keras.layers.Conv2D(32, 3, activation='relu')\n\t\t\tself.flatten = tf.keras.layers.Flatten()\n\t\t\tself.dense = tf.keras.layers.Dense(10)\n\t\tdef call(self, x):\n\t\t\tx = self.conv1(x)\n\t\t\tx = self.flatten(x)\n\t\t\treturn self.dense(x)",
      "metadata": {
         "section_header": "Global Other",
         "type": "python global"
      }
   },
   {
      "page_content": "Functions: __init__, call",
      "metadata": {
         "section_header": "MyModel",
         "type": "python class"
      }
   },
   {
      "page_content": "\t\tdef __init__(self):\n\t\t\tsuper().__init__()\n\t\t\tself.conv1 = tf.keras.layers.Conv2D(32, 3, activation='relu')\n\t\t\tself.flatten = tf.keras.layers.Flatten()\n\t\t\tself.dense = tf.keras.layers.Dense(10)",
      "metadata": {
         "section_header": "__init__",
         "type": "python function"
      }
   },
   {
      "page_content": "\t\tdef call(self, x):\n\t\t\tx = self.conv1(x)\n\t\t\tx = self.flatten(x)\n\t\t\treturn self.dense(x)",
      "metadata": {
         "section_header": "call",
         "type": "python function"
      }
   }
]