[
    {
        "page_content": "## Mike Lewis*, Yinhan Liu*, Naman Goyal*, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov, Luke Zettlemoyer Facebook AI\n\n{ mikelewis,yinhanliu,naman @fb.com }",
        "metadata": {
            "section_header": "Mike Lewis*, Yinhan Liu*, Naman Goyal*, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov, Luke Zettlemoyer Facebook AI",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## Abstract\n\nWe present BART, a denoising autoencoder for pretraining sequence-to-sequence models. BART is trained by (1) corrupting text with an arbitrary noising function, and (2) learning a model to reconstruct the original text. It uses a standard Tranformer-based neural machine translation architecture which, despite its simplicity, can be seen as generalizing BERT (due to the bidirectional encoder), GPT (with the left-to-right decoder), and many other more recent pretraining schemes. We evaluate a number of noising approaches, finding the best performance by both randomly shuffling the order of the original sentences and using a novel in-filling scheme, where spans of text are replaced with a single mask token. BART is particularly effective when fine tuned for text generation but also works well for comprehension tasks. It matches the performance of RoBERTa with comparable training resources on GLUE and SQuAD, achieves new stateof-the-art results on a range of abstractive dialogue, question answering, and summarization tasks, with gains of up to 6 ROUGE. BART also provides a 1.1 BLEU increase over a back-translation system for machine translation, with only target language pretraining. We also report ablation experiments that replicate other pretraining schemes within the BART framework, to better measure which factors most influence end-task performance.",
        "metadata": {
            "section_header": "Abstract",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 1 Introduction\n\nSelf-supervised methods have achieved remarkable success in a wide range of NLP tasks (Mikolov et al., 2013; Peters et al., 2018; Devlin et al., 2019; Joshi et al., 2019; Yang et al., 2019; Liu et al., 2019). The most successful approaches have been variants of masked language models, which are denoising autoencoders that are trained to reconstruct text where a random subset of the words has been masked out. Recent work has shown gains by improving the distribution of masked tokens (Joshi et al., 2019), the order in which\n\nmasked tokens are predicted (Yang et al., 2019), and the available context for replacing masked tokens (Dong et al., 2019). However, these methods typically focus on particular types of end tasks (e.g. span prediction, generation, etc.), limiting their applicability.\n\nIn this paper, we present BART, which pre-trains a model combining Bidirectional and Auto-Regressive Transformers. BART is a denoising autoencoder built with a sequence-to-sequence model that is applicable to a very wide range of end tasks. Pretraining has two stages (1) text is corrupted with an arbitrary noising function, and (2) a sequence-to-sequence model is learned to reconstruct the original text. BART uses a standard Tranformer-based neural machine translation architecture which, despite its simplicity, can be seen as generalizing BERT (due to the bidirectional encoder), GPT (with the left-to-right decoder), and many other more recent pretraining schemes (see Figure 1).\n\nA key advantage of this setup is the noising flexibility; arbitrary transformations can be applied to the original text, including changing its length. We evaluate a number of noising approaches, finding the best performance by both randomly shuffling the order of the original sentences and using a novel in-filling scheme, where arbitrary length spans of text (including zero length) are replaced with a single mask token. This approach generalizes the original word masking and next sentence prediction objectives in BERT by forcing the model to reason more about overall sentence length and make longer range transformations to the input.\n\nBART is particularly effective when fine tuned for text generation but also works well for comprehension tasks. It matches the performance of RoBERTa (Liu et al., 2019) with comparable training resources on GLUE (Wang et al., 2018) and SQuAD (Rajpurkar et al., 2016), and achieves new state-of-the-art results on a range of abstractive dialogue, question answering, and summarization tasks. For example, it improves performance by 6 ROUGE over previous work on XSum (Narayan et al., 2018).\n\nBARTalso opens up new ways of thinking about fine tuning. We present a new scheme for machine translation where a BART model is stacked above a few additional transformer layers. These layers are trained to essentially translate the foreign language to noised\n\n(a) BERT: Random tokens are replaced with masks, and the document is encoded bidirectionally. Missing tokens are predicted independently, so BERT cannot easily be used for generation.\n\n<!-- image -->\n\n(b) GPT: Tokens are predicted auto-regressively, meaning GPTcan be used for generation. However words can only condition on leftward context, so it cannot learn bidirectional interactions.\n\n<!-- image -->\n\n(c) BART: Inputs to the encoder need not be aligned with decoder outputs, allowing arbitary noise transformations. Here, a document has been corrupted by replacing spans of text with mask symbols. The corrupted document (left) is encoded with a bidirectional model, and then the likelihood of the original document (right) is calculated with an autoregressive decoder. For fine-tuning, an uncorrupted document is input to both the encoder and decoder, and we use representations from the final hidden state of the decoder.\n\n<!-- image -->\n\nFigure 1: A schematic comparison of BART with BERT (Devlin et al., 2019) and GPT (Radford et al., 2018).\n\nEnglish, by propagation through BART, thereby using BART as a pre-trained target-side language model. This approach improves performance over a strong back-translation MT baseline by 1.1 BLEU on the WMTRomanian-English benchmark.\n\nTo better understand these effects, we also report an ablation analysis that replicates other recently proposed training objectives. This study allows us to carefully control for a number of factors, including data and optimization parameters, which have been shown to be as important for overall performance as the selection of training objectives (Liu et al., 2019). We find that BART exhibits the most consistently strong performance across the full range of tasks we consider.",
        "metadata": {
            "section_header": "Introduction",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 2 Model\n\nBARTis a denoising autoencoder that maps a corrupted document to the original document it was derived from. It is implemented as a sequence-to-sequence model with a bidirectional encoder over corrupted text and a left-to-right autoregressive decoder. For pre-training, we optimize the negative log likelihood of the original document.",
        "metadata": {
            "section_header": "Model",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 2.1 Architecture\n\nBART uses the standard sequence-to-sequence Transformer architecture from (Vaswani et al., 2017), except, following GPT, that we modify ReLU activation functions to GeLUs (Hendrycks &amp; Gimpel, 2016) and initialise parameters from N (0 0 02) , . . For our base model, we use 6 layers in the encoder and de-\n\ncoder, and for our large model we use 12 layers in each. The architecture is closely related to that used in BERT, with the following differences: (1) each layer of the decoder additionally performs cross-attention over the final hidden layer of the encoder (as in the transformer sequence-to-sequence model); and (2) BERT uses an additional feed-forward network before wordprediction, which BART does not. In total, BART contains roughly 10% more parameters than the equivalently sized BERT model.",
        "metadata": {
            "section_header": "Architecture",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 2.2 Pre-training BART\n\nBART is trained by corrupting documents and then optimizing a reconstruction loss-the cross-entropy between the decoder's output and the original document. Unlike existing denoising autoencoders, which are tailored to specific noising schemes, BART allows us to apply any type of document corruption. In the extreme case, where all information about the source is lost, BART is equivalent to a language model.\n\nWeexperiment with several previously proposed and novel transformations, but we believe there is a significant potential for development of other new alternatives. The transformations we used are summarized below, and examples are shown in Figure 2.\n\nToken Masking Following BERT (Devlin et al., 2019), random tokens are sampled and replaced with [MASK] elements.\n\nToken Deletion Random tokens are deleted from the input. In contrast to token masking, the model must decide which positions are missing inputs.\n\nFigure 2: Transformations for noising the input that we experiment with. These transformations can be composed.\n\n<!-- image -->\n\nText Infilling A number of text spans are sampled, with span lengths drawn from a Poisson distribution ( λ = 3 ). Each span is replaced with a single [MASK] token. 0-length spans correspond to the insertion of [MASK] tokens. Text infilling is inspired by SpanBERT (Joshi et al., 2019), but SpanBERT samples span lengths from a different (clamped geometric) distribution, and replaces each span with a sequence of [MASK] tokens of exactly the same length. Text infilling teaches the model to predict how many tokens are missing from a span.\n\nSentence Permutation A document is divided into sentences based on full stops, and these sentences are shuffled in a random order.\n\nDocument Rotation A token is chosen uniformly at random, and the document is rotated so that it begins with that token. This task trains the model to identify the start of the document.",
        "metadata": {
            "section_header": "Pre-training BART",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 3 Fine-tuning BART\n\nThe representations produced by BART can be used in several ways for downstream applications.",
        "metadata": {
            "section_header": "Fine-tuning BART",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 3.1 Sequence Classification Tasks\n\nFor sequence classification tasks, the same input is fed into the encoder and decoder, and the final hidden state of the final decoder token is fed into new multi-class linear classifier. This approach is related to the CLS token in BERT; however we add the additional token to the end so that representation for the token in the decoder can attend to decoder states from the complete input (Figure 3a).",
        "metadata": {
            "section_header": "Sequence Classification Tasks",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 3.2 Token Classification Tasks\n\nFor token classification tasks, such as answer endpoint classification for SQuAD, we feed the complete document into the encoder and decoder, and use the top hidden state of the decoder as a representation for each word. This representation is used to classify the token.",
        "metadata": {
            "section_header": "Token Classification Tasks",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 3.3 Sequence Generation Tasks\n\nBecause BART has an autoregressive decoder, it can be directly fine tuned for sequence generation tasks such as abstractive question answering and summarization. In both of these tasks, information is copied from the\n\ninput but manipulated, which is closely related to the denoising pre-training objective. Here, the encoder input is the input sequence, and the decoder generates outputs autoregressively.",
        "metadata": {
            "section_header": "Sequence Generation Tasks",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 3.4 Machine Translation\n\nWealso explore using BART to improve machine translation decoders for translating into English. Previous work Edunov et al. (2019) has shown that models can be improved by incorporating pre-trained encoders, but gains from using pre-trained language models in decoders have been limited. We show that it is possible to use the entire BART model (both encoder and decoder) as a single pretrained decoder for machine translation, by adding a new set of encoder parameters that are learned from bitext (see Figure 3b).\n\nMore precisely, we replace BART's encoder embedding layer with a new randomly initialized encoder. The model is trained end-to-end, which trains the new encoder to map foreign words into an input that BART can de-noise to English. The new encoder can use a separate vocabulary from the original BART model.\n\nWe train the source encoder in two steps, in both cases backpropagating the cross-entropy loss from the output of the BART model. In the first step, we freeze most of BART parameters and only update the randomly initialized source encoder, the BART positional embeddings, and the self-attention input projection matrix of BART's encoder first layer. In the second step, we train all model parameters for a small number of iterations.",
        "metadata": {
            "section_header": "Machine Translation",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 4 Comparing Pre-training Objectives\n\nBARTsupports a much wider range of noising schemes during pre-training than previous work. We compare a range of options using base-size models (6 encoder and 6 decoder layers, with a hidden size of 768), evaluated on a representative subset of the tasks we will consider for the full large scale experiments in § 5.",
        "metadata": {
            "section_header": "Comparing Pre-training Objectives",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 4.1 Comparison Objectives\n\nWhile many pre-training objectives have been proposed, fair comparisons between these have been difficult to perform, at least in part due to differences in training data, training resources, architectural differences between models, and fine-tuning procedures. We\n\n(a) To use BART for classification problems, the same input is fed into the encoder and decoder, and the representation from the final output is used.\n\n<!-- image -->\n\n(b) For machine translation, we learn a small additional encoder that replaces the word embeddings in BART. The new encoder can use a disjoint vocabulary.\n\n<!-- image -->\n\nFigure 3: Fine tuning BART for classification and translation.\n\nre-implement strong pre-training approaches recently proposed for discriminative and generation tasks. We aim, as much as possible, to control for differences unrelated to the pre-training objective. However, we do make minor changes to the learning rate and usage of layer normalisation in order to improve performance (tuning these separately for each objective). For reference, we compare our implementations with published numbers from BERT, which was also trained for 1M steps on a combination of books and Wikipedia data. We compare the following approaches:\n\nLanguage Model Similarly to GPT (Radford et al., 2018), we train a left-to-right Transformer language model. This model is equivalent to the BART decoder, without cross-attention.\n\nPermuted Language Model Based on XLNet (Yang et al., 2019), we sample 1/6 of the tokens, and generate them in a random order autoregressively. For consistency with other models, we do not implement the relative positional embeddings or attention across segments from XLNet.\n\nMasked Language Model Following BERT (Devlin et al., 2019), we replace 15% of tokens with [MASK] symbols, and train the model to independently predict the original tokens.\n\nMultitask Masked Language Model As in UniLM (Dong et al., 2019), we train a Masked Language Model with additional self-attention masks. Self attention masks are chosen randomly in with the follow proportions: 1/6 left-to-right, 1/6 right-to-left, 1/3 unmasked, and 1/3 with the first 50% of tokens unmasked and a left-to-right mask for the remainder.\n\nMasked Seq-to-Seq Inspired by MASS (Song et al., 2019), we mask a span containing 50% of tokens, and train a sequence to sequence model to predict the masked tokens.\n\nFor the Permuted LM, Masked LM and Multitask Masked LM, we use two-stream attention (Yang et al., 2019) to efficiently compute likelihoods of the output part of the sequence (using a diagonal self-attention mask on the output to predict words left-to-right).\n\nWe experiment with (1) treating the task as a standard sequence-to-sequence problem, where the source input to the encoder and the target is the decoder output, or (2) adding the source as prefix to the target in the decoder, with a loss only on the target part of the sequence. We find the former works better for BART models, and the latter for other models.\n\nTo most directly compare our models on their ability to model their fine-tuning objective (the log likelihood of the human text), we report perplexity in Table 1.",
        "metadata": {
            "section_header": "Comparison Objectives",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 4.2 Tasks\n\nSQuAD (Rajpurkar et al., 2016)a an extractive question answering task on Wikipedia paragraphs. Answers are text spans extracted from a given document context. Similar to BERT (Devlin et al., 2019), we use concatenated question and context as input to the encoder of BART, and additionally pass them to the decoder. The model includes classifiers to predict the start and end indices of each token.\n\nMNLI (Williams et al., 2017), a bitext classification task to predict whether one sentence entails another. The fine-tuned model concatenates the two sentences with appended an EOS token, and passes them to both the BART encoder and decoder. In contrast to BERT, the representation of the EOS token is used to classify the sentences relations.\n\nELI5 (Fan et al., 2019), a long-form abstractive question answering dataset. Models generate answers conditioned on the concatenation of a question and supporting documents.\n\nXSum (Narayan et al., 2018), a news summarization dataset with highly abstractive summaries.\n\nConvAI2 (Dinan et al., 2019), a dialogue response generation task, conditioned on context and a persona.\n\nCNN/DM (Hermann et al., 2015), a news summarization dataset. Summaries here are typically closely related to source sentences.",
        "metadata": {
            "section_header": "Tasks",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 4.3 Results\n\nResults are shown in Table 1. Several trends are clear:\n\nTable 1: Comparison of pre-training objectives. All models are of comparable size and are trained for 1M steps on a combination of books and Wikipedia data. Entries in the bottom two blocks are trained on identical data using the same code-base, and fine-tuned with the same procedures. Entries in the second block are inspired by pre-training objectives proposed in previous work, but have been simplified to focus on evaluation objectives (see § 4.1). Performance varies considerably across tasks, but the BART models with text infilling demonstrate the most consistently strong performance.\n\n| Model                                  | SQuAD 1.1 F1   | MNLI Acc   | ELI5 PPL   | XSum PPL   | ConvAI2 PPL   | CNN/DM PPL   |\n|----------------------------------------|----------------|------------|------------|------------|---------------|--------------|\n| BERT Base (Devlin et al., 2019)        | 88.5           | 84.3       | -          | -          | -             | -            |\n| Masked Language Model                  | 90.0           | 83.5       | 24.77      | 7.87       | 12.59         | 7.06         |\n| Masked Seq2seq                         | 87.0           | 82.1       | 23.40      | 6.80       | 11.43         | 6.19         |\n| Language Model                         | 76.7           | 80.1       | 21.40      | 7.00       | 11.51         | 6.56         |\n| Permuted Language Model                | 89.1           | 83.7       | 24.03      | 7.69       | 12.23         | 6.96         |\n| Multitask Masked Language Model        | 89.2           | 82.4       | 23.73      | 7.50       | 12.39         | 6.74         |\n| BART Base                              |                |            |            |            |               |              |\n| w/ Token Masking                       | 90.4           | 84.1       | 25.05      | 7.08       | 11.73         | 6.10         |\n| w/ Token Deletion                      | 90.4           | 84.1       | 24.61      | 6.90       | 11.46         | 5.87         |\n| w/ Text Infilling                      | 90.8           | 84.0       | 24.26      | 6.61       | 11.05         | 5.83         |\n| w/ Document Rotation                   | 77.2           | 75.3       | 53.69      | 17.14      | 19.87         | 10.59        |\n| w/ Sentence Shuffling                  | 85.4           | 81.5       | 41.87      | 10.93      | 16.67         | 7.89         |\n| w/ Text Infilling + Sentence Shuffling | 90.8           | 83.8       | 24.17      | 6.62       | 11.12         | 5.41         |\n\nPerformance of pre-training methods varies significantly across tasks The effectiveness of pre-training methods is highly dependent on the task. For example, a simple language model achieves the best ELI5 performance, but the worst SQUAD results.\n\nToken masking is crucial Pre-training objectives based on rotating documents or permuting sentences perform poorly in isolation. The successful methods either use token deletion or masking, or self-attention masks. Deletion appears to outperform masking on generation tasks.\n\nLeft-to-right pre-training improves generation The Masked Language Model and the Permuted Language Model perform less well than others on generation, and are the only models we consider that do not include left-to-right auto-regressive language modelling during pre-training.\n\nBidirectional encoders are crucial for SQuAD As noted in previous work (Devlin et al., 2019), just left-to-right decoder performs poorly on SQuAD, because future context is crucial in classification decisions. However, BART achieves similar performance with only half the number of bidirectional layers.\n\nThe pre-training objective is not the only important factor Our Permuted Language Model performs less well than XLNet (Yang et al., 2019). Some of this difference is likely due to not including other architectural improvements, such as relative-position embeddings or segment-level recurrence.\n\nPure language models perform best on ELI5 The ELI5 dataset is an outlier, with much higher perplexities than other tasks, and is the only generation task where other models outperform BART. A pure language model performs best, suggesting that BART is less effective when the output is only loosely constrained by the input.\n\nBART achieves the most consistently strong performance. With the exception of ELI5, BART models using text-infilling perform well on all tasks.",
        "metadata": {
            "section_header": "Results",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 5 Large-scale Pre-training Experiments\n\nRecent work has shown that downstream performance can dramatically improve when pre-training is scaled to large batch sizes (Yang et al., 2019; Liu et al., 2019) and corpora. To test how well BART performs in this regime, and to create a useful model for downstream tasks, we trained BART using the same scale as the RoBERTa model.",
        "metadata": {
            "section_header": "Large-scale Pre-training Experiments",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 5.1 Experimental Setup\n\nWe pre-train a large model with 12 layers in each of the encoder and decoder, and a hidden size of 1024. Following RoBERTa (Liu et al., 2019), we use a batch size of 8000, and train the model for 500000 steps. Documents are tokenized with the same byte-pair encoding as GPT-2 (Radford et al., 2019). Based on the results in Section § 4, we use a combination of text infilling and sentence permutation. We mask 30% of tokens in each document, and permute all sentences. Although sentence permutation only shows significant additive gains\n\nTable 2: Results for large models on SQuAD and GLUE tasks. BART performs comparably to RoBERTa and XLNet, suggesting that BART's uni-directional decoder layers do not reduce performance on discriminative tasks.\n\n|         | SQuAD 1.1 EM/F1   | SQuAD 2.0 EM/F1   | MNLI m/mm   |   SST Acc | QQP Acc   |   QNLI Acc | STS-B Acc   |   RTE Acc | MRPC Acc   |   CoLA Mcc |\n|---------|-------------------|-------------------|-------------|-----------|-----------|------------|-------------|-----------|------------|------------|\n| BERT    | 84.1/90.9         | 79.0/81.8         | 86.6/-      |      93.2 | 91.3      |       92.3 | 90.0        |      70.4 | 88.0       |       60.6 |\n| UniLM   | -/-               | 80.5/83.4         | 87.0/85.9   |      94.5 | -         |       92.7 | -           |      70.9 | -          |       61.1 |\n| XLNet   | 89.0 /94.5        | 86.1/88.8         | 89.8/-      |      95.6 | 91.8      |       93.9 | 91.8        |      83.8 | 89.2       |       63.6 |\n| RoBERTa | 88.9/ 94.6        | 86.5/89.4         | 90.2/90.2   |      96.4 | 92.2      |       94.7 | 92.4        |      86.6 | 90.9       |       68   |\n| BART    | 88.8/ 94.6        | 86.1/89.2         | 89.9/90.1   |      96.6 | 92.5      |       94.9 | 91.2        |      87   | 90.4       |       62.8 |\n\nTable 4: BART outperforms previous work on conversational response generation. Perplexities are renormalized based on official tokenizer for ConvAI2.\n\n|                                    | CNN/DailyMail   | CNN/DailyMail   | CNN/DailyMail   | XSum   | XSum   | XSum   |\n|------------------------------------|-----------------|-----------------|-----------------|--------|--------|--------|\n|                                    | R1              | R2              | RL              | R1     | R2     | RL     |\n| Lead-3                             | 40.42           | 17.62           | 36.67           | 16.30  | 1.60   | 11.95  |\n| PTGEN (See et al., 2017)           | 36.44           | 15.66           | 33.42           | 29.70  | 9.21   | 23.24  |\n| PTGEN+COV (See et al., 2017)       | 39.53           | 17.28           | 36.38           | 28.10  | 8.02   | 21.72  |\n| UniLM                              | 43.33           | 20.21           | 40.51           | -      | -      | -      |\n| BERTSUMABS (Liu &amp; Lapata, 2019)    | 41.72           | 19.39           | 38.76           | 38.76  | 16.33  | 31.15  |\n| BERTSUMEXTABS (Liu &amp; Lapata, 2019) | 42.13           | 19.60           | 39.18           | 38.81  | 16.50  | 31.27  |\n| BART                               | 44.16           | 21.28           | 40.90           | 45.14  | 22.27  | 37.25  |\n\nTable 3: Results on two standard summarization datasets. BART outperforms previous work on summarization on two tasks and all metrics, with gains of roughly 6 points on the more abstractive dataset.\n\non the CNN/DM summarization dataset, we hypothesised that larger pre-trained models may be better able to learn from this task. To help the model better fit the data, we disabled dropout for the final 10% of training steps. We use the same pre-training data as Liu et al. (2019), consisting of 160Gb of news, books, stories, and web text.",
        "metadata": {
            "section_header": "Experimental Setup",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 5.2 Discriminative Tasks\n\nTable 2 compares the performance of BART with several recent approaches on the well-studied SQuAD and GLUE tasks (Warstadt et al., 2018; Socher et al., 2013; Dolan &amp; Brockett, 2005; Agirre et al., 2007; Williams et al., 2018; Dagan et al., 2006; Levesque et al., 2011).\n\nThe most directly comparable baseline is RoBERTa, which was pre-trained with the same resources, but a different objective. Overall, BART performs similarly, with only small differences between the models on most tasks. suggesting that BART's improvements on generation tasks do not come at the expense of classification performance.",
        "metadata": {
            "section_header": "Discriminative Tasks",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 5.3 Generation Tasks\n\nWe also experiment with several text generation tasks. BARTis fine-tuned as a standard sequence-to-sequence model from the input to the output text. During finetuning we use a label smoothed cross entropy loss (Pereyra et al., 2017), with the smoothing parameter set to 0.1. During generation, we set beam size as 5, remove duplicated trigrams in beam search, and tuned the model with min-len, max-len, length penalty on the validation set (Fan et al., 2017).\n\n|                     | ConvAI2   | ConvAI2   |\n|---------------------|-----------|-----------|\n|                     | Valid F1  | Valid PPL |\n| Seq2Seq + Attention | 16.02     | 35.07     |\n| Best System         | 19.09     | 17.51     |\n| BART                | 20.72     | 11.85     |\n\nSummarization To provide a comparison with the state-of-the-art in summarization, we present results on two summarization datasets, CNN/DailyMail and XSum, which have distinct properties.\n\nSummaries in the CNN/DailyMail tend to resemble source sentences. Extractive models do well here, and even the baseline of the first-three source sentences is highly competitive. Nevertheless, BART outperforms all existing work.\n\nIn contrast, XSum is highly abstractive, and extractive models perform poorly. BART outperforms the best previous work, which leverages BERT, by roughly 6.0 points on all ROUGE metrics-representing a significant advance in performance on this problem. Qualitatively, sample quality is high (see § 6).\n\nDialogue We evaluate dialogue response generation on CONVAI2 (Dinan et al., 2019), in which agents must generate responses conditioned on both the previous context and a textually-specified persona. BART outperforms previous work on two automated metrics.\n\nTable 5: BART achieves state-of-the-art results on the challenging ELI5 abstractive question answering dataset. Comparison models are from Fan et al. (2019).\n\n|                   | ELI5   | ELI5   | ELI5   |\n|-------------------|--------|--------|--------|\n|                   | R1     | R2     | RL     |\n| Best Extractive   | 23.5   | 3.1    | 17.5   |\n| Language Model    | 27.8   | 4.7    | 23.1   |\n| Seq2Seq           | 28.3   | 5.1    | 22.8   |\n| Seq2Seq Multitask | 28.9   | 5.4    | 23.1   |\n| BART              | 30.6   | 6.2    | 24.3   |\n\nTable 6: The performance (BLEU) of baseline and BART on WMT'16 RO-EN augmented with backtranslation data. BART improves over a strong backtranslation (BT) baseline by using monolingual English pre-training.\n\n|            |   RO-EN |\n|------------|---------|\n| Baseline   |   36.8  |\n| Fixed BART |   36.29 |\n| Tuned BART |   37.96 |\n\nAbstractive QA We use the recently proposed ELI5 dataset to test the model's ability to generate long freeform answers. We find BART outperforms the best previous work by 1.2 ROUGE-L, but the dataset remains a challenging, because answers are only weakly specified by the question.",
        "metadata": {
            "section_header": "Generation Tasks",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 5.4 Translation\n\nWealso evaluated performance on WMT16 RomanianEnglish, augmented with back-translation data from Sennrich et al. (2016). We use a 6-layer transformer source encoder to map Romanian into a representation that BART is able to de-noise into English, following the approach introduced in § 3.4. Experiment results are presented in Table 6. We compare our results against a baseline Transformer architecture (Vaswani et al., 2017) with Transformerlarge settings (the baseline row). We show the performance of both steps of our model in the fixed BART and tuned BART rows. For each row we experiment on the original WMT16 Romanian-English augmented with back-translation data. We use a beam width of 5 and a length penalty of α = 1 . Preliminary results suggested that our approach was less effective without back-translation data, and prone to overfitting-future work should explore additional regularization techniques.",
        "metadata": {
            "section_header": "Translation",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 6 Qualitative Analysis\n\nBART shows large improvements on summarization metrics, of up to 6 points over the prior state-of-the-art. To understand BART's performance beyond automated metrics, we analyse its generations qualitatively.\n\nTable 7 shows example summaries generated by BART. Examples are taken from WikiNews articles published after the creation of the pre-training corpus, to eliminate the possibility of the events described being present in the model's training data. Following Narayan et al. (2018), we remove the first sentence of the article prior to summarizing it, so there is no easy extractive summary of the document.\n\nUnsurprisingly, model output is fluent and grammatical English. However, model output is also highly abstractive, with few phrases copied from the input. The output is also generally factually accurate, and integrates supporting evidence from across the input document with background knowledge (for example, correctly completing names, or inferring that PG&amp;E operates in California). In the first example, inferring that fish are protecting reefs from global warming requires non-trivial inference from the text. However, the claim that the work was published in Science is not supported by the source.\n\nThese samples demonstrate that the BART pretraining has learned a strong combination of natural language understanding and generation.",
        "metadata": {
            "section_header": "Qualitative Analysis",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    },
    {
        "page_content": "## 8 Conclusions\n\nWe introduced BART, a pre-training approach that learns to map corrupted documents to the original. BART achieves similar performance to RoBERTa on discriminative tasks, while achieving new state-of-theart results on a number of text generation tasks. Future work should explore new methods for corrupting documents for pre-training, perhaps tailoring them to specific end tasks.",
        "metadata": {
            "section_header": "Conclusions",
            "title": "BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension",
            "type": "paper"
        }
    }
]